version: 2.1
executors:
    default:
      working_directory: /go/src/github.com/yukagil/sample-go-app
      docker:
        - image: circleci/golang:1.11
          environment:
            GO111MODULE: "on"
jobs:
  build:
    executor:
      name: default
    working_directory: /go/src/github.com/yukagil/sample-go-app
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run:
          name: Run unit tests
          command: |
            mkdir -p /tmp/test-results
            gotestsum --junitfile /tmp/test-results/go-test-report.xml
      - run: 
          name: Build Image
          command: make build-linux
      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - store_artifacts:
          path: /tmp/test-results
          destination: raw-test-output
      - store_test_results:
          path: /tmp/test-results
      - persist_to_workspace:
          root: /go/src/github.com/yukagil/sample-go-app
          paths:
            - ./*

  upload_image:
    executor:
      name: default
    steps:
      - attach_workspace:
          at: /go/src/github.com/yukagil/sample-go-app
      - run:
          name: Push Docker Image
          command: stat go_server

  deploy:
    parameters:
      env:
        type: enum
        enum: ["dev", "prod"]
    executor:
      name: default
    steps:
      - run:
          name: Deploy to << parameters.env >>
          command: echo "<< parameters.env >>"
      

workflows:
  build-and-deploy:
    jobs:
      - build
      - upload_image:
          requires:
            - build
      - deploy:
          name: deploy_dev
          env: dev
          requires:
            - upload_image
          filters:
            branches:
              only: develop
      - deploy:
          name: deploy_prod
          env: prod
          requires:
            - upload_image
          filters:
            branches:
              only: master